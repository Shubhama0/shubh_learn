{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkumar/Desktop/shubhdev/assignment/video/src/App.js\",\n  _s = $RefreshSig$();\n// Frontend-only Video Progress Tracker (React + Local State)\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VIDEO_DURATION = 120; // Example: 2 minutes\n\nfunction App() {\n  _s();\n  const videoRef = useRef();\n  const [watched, setWatched] = useState([]);\n  const [watching, setWatching] = useState(new Set());\n  const [intervalTimer, setIntervalTimer] = useState(null);\n  const [alertShown, setAlertShown] = useState(false);\n  useEffect(() => {\n    const stored = JSON.parse(localStorage.getItem('progressData'));\n    if (stored) {\n      setWatched(stored.intervals || []);\n      videoRef.current.currentTime = stored.lastPosition || 0;\n    }\n  }, []);\n  const startTracking = () => {\n    const timer = setInterval(() => {\n      const time = Math.floor(videoRef.current.currentTime);\n      setWatching(prev => new Set(prev).add(time));\n    }, 500);\n    setIntervalTimer(timer);\n  };\n  const stopTracking = () => {\n    clearInterval(intervalTimer);\n    const seconds = Array.from(watching).sort((a, b) => a - b);\n    const merged = [];\n    for (let i = 0; i < seconds.length; i++) {\n      let start = seconds[i];\n      while (i < seconds.length - 1 && seconds[i + 1] === seconds[i] + 1) i++;\n      let end = seconds[i] + 1;\n      merged.push([start, end]);\n    }\n    const all = mergeIntervals([...watched, ...merged]);\n    const lastPosition = videoRef.current.currentTime;\n    setWatched(all);\n    setWatching(new Set());\n    localStorage.setItem('progressData', JSON.stringify({\n      intervals: all,\n      lastPosition\n    }));\n    const progress = getProgressFromIntervals(all);\n    if (progress === 100 && !alertShown) {\n      alert(\"ðŸŽ‰ Congrats! You've watched 100% of the video.\");\n      setAlertShown(true);\n    }\n  };\n  const mergeIntervals = intervals => {\n    intervals.sort((a, b) => a[0] - b[0]);\n    const merged = [];\n    for (const [start, end] of intervals) {\n      if (!merged.length || merged[merged.length - 1][1] < start) {\n        merged.push([start, end]);\n      } else {\n        merged[merged.length - 1][1] = Math.max(merged[merged.length - 1][1], end);\n      }\n    }\n    return merged;\n  };\n  const getProgressFromIntervals = intervals => {\n    const uniqueSeconds = intervals.reduce((acc, [s, e]) => acc + (e - s), 0);\n    return Math.min((uniqueSeconds / VIDEO_DURATION * 100).toFixed(2), 100);\n  };\n  const handleReset = () => {\n    localStorage.removeItem('progressData');\n    setWatched([]);\n    setWatching(new Set());\n    setAlertShown(false);\n    videoRef.current.currentTime = 0;\n  };\n  const getProgress = () => getProgressFromIntervals(watched);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Video Progress Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          width: \"600\",\n          controls: true,\n          onPlay: startTracking,\n          onPause: stopTracking,\n          onEnded: stopTracking,\n          src: \"/videos/sample.mp4\" // Replace with your local video file\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-display\",\n          children: [\"Progress: \", getProgress(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: handleReset,\n          children: \"Reset Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 | Built for SDE Intern Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hYCUhGDHVYrtQ4Z+wzKw5SqgnUw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","VIDEO_DURATION","App","_s","videoRef","watched","setWatched","watching","setWatching","Set","intervalTimer","setIntervalTimer","alertShown","setAlertShown","stored","JSON","parse","localStorage","getItem","intervals","current","currentTime","lastPosition","startTracking","timer","setInterval","time","Math","floor","prev","add","stopTracking","clearInterval","seconds","Array","from","sort","a","b","merged","i","length","start","end","push","all","mergeIntervals","setItem","stringify","progress","getProgressFromIntervals","alert","max","uniqueSeconds","reduce","acc","s","e","min","toFixed","handleReset","removeItem","getProgress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","controls","onPlay","onPause","onEnded","src","onClick","_c","$RefreshReg$"],"sources":["/Users/shubhamkumar/Desktop/shubhdev/assignment/video/src/App.js"],"sourcesContent":["// Frontend-only Video Progress Tracker (React + Local State)\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\n\nconst VIDEO_DURATION = 120; // Example: 2 minutes\n\nfunction App() {\n  const videoRef = useRef();\n  const [watched, setWatched] = useState([]);\n  const [watching, setWatching] = useState(new Set());\n  const [intervalTimer, setIntervalTimer] = useState(null);\n  const [alertShown, setAlertShown] = useState(false);\n\n  useEffect(() => {\n    const stored = JSON.parse(localStorage.getItem('progressData'));\n    if (stored) {\n      setWatched(stored.intervals || []);\n      videoRef.current.currentTime = stored.lastPosition || 0;\n    }\n  }, []);\n\n  const startTracking = () => {\n    const timer = setInterval(() => {\n      const time = Math.floor(videoRef.current.currentTime);\n      setWatching(prev => new Set(prev).add(time));\n    }, 500);\n    setIntervalTimer(timer);\n  };\n\n  const stopTracking = () => {\n    clearInterval(intervalTimer);\n    const seconds = Array.from(watching).sort((a, b) => a - b);\n    const merged = [];\n    for (let i = 0; i < seconds.length; i++) {\n      let start = seconds[i];\n      while (i < seconds.length - 1 && seconds[i + 1] === seconds[i] + 1) i++;\n      let end = seconds[i] + 1;\n      merged.push([start, end]);\n    }\n    const all = mergeIntervals([...watched, ...merged]);\n    const lastPosition = videoRef.current.currentTime;\n    setWatched(all);\n    setWatching(new Set());\n    localStorage.setItem('progressData', JSON.stringify({ intervals: all, lastPosition }));\n\n    const progress = getProgressFromIntervals(all);\n    if (progress === 100 && !alertShown) {\n      alert(\"ðŸŽ‰ Congrats! You've watched 100% of the video.\");\n      setAlertShown(true);\n    }\n  };\n\n  const mergeIntervals = (intervals) => {\n    intervals.sort((a, b) => a[0] - b[0]);\n    const merged = [];\n    for (const [start, end] of intervals) {\n      if (!merged.length || merged[merged.length - 1][1] < start) {\n        merged.push([start, end]);\n      } else {\n        merged[merged.length - 1][1] = Math.max(merged[merged.length - 1][1], end);\n      }\n    }\n    return merged;\n  };\n\n  const getProgressFromIntervals = (intervals) => {\n    const uniqueSeconds = intervals.reduce((acc, [s, e]) => acc + (e - s), 0);\n    return Math.min(((uniqueSeconds / VIDEO_DURATION) * 100).toFixed(2), 100);\n  };\n\n  const handleReset = () => {\n    localStorage.removeItem('progressData');\n    setWatched([]);\n    setWatching(new Set());\n    setAlertShown(false);\n    videoRef.current.currentTime = 0;\n  };\n\n  const getProgress = () => getProgressFromIntervals(watched);\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"navbar\">\n        <h2>Video Progress Tracker</h2>\n      </header>\n\n      <main className=\"main-content\">\n        <div className=\"video-container\">\n          <video\n            ref={videoRef}\n            width=\"600\"\n            controls\n            onPlay={startTracking}\n            onPause={stopTracking}\n            onEnded={stopTracking}\n            src=\"/videos/sample.mp4\" // Replace with your local video file\n          ></video>\n          <div className=\"progress-display\">Progress: {getProgress()}%</div>\n          <button className=\"reset-button\" onClick={handleReset}>Reset Progress</button>\n        </div>\n      </main>\n\n      <footer className=\"footer\">\n        <p>&copy; 2025 | Built for SDE Intern Assignment</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,cAAc,GAAG,GAAG,CAAC,CAAC;;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGP,MAAM,CAAC,CAAC;EACzB,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAIW,GAAG,CAAC,CAAC,CAAC;EACnD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEnDF,SAAS,CAAC,MAAM;IACd,MAAMkB,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;IAC/D,IAAIJ,MAAM,EAAE;MACVR,UAAU,CAACQ,MAAM,CAACK,SAAS,IAAI,EAAE,CAAC;MAClCf,QAAQ,CAACgB,OAAO,CAACC,WAAW,GAAGP,MAAM,CAACQ,YAAY,IAAI,CAAC;IACzD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACxB,QAAQ,CAACgB,OAAO,CAACC,WAAW,CAAC;MACrDb,WAAW,CAACqB,IAAI,IAAI,IAAIpB,GAAG,CAACoB,IAAI,CAAC,CAACC,GAAG,CAACJ,IAAI,CAAC,CAAC;IAC9C,CAAC,EAAE,GAAG,CAAC;IACPf,gBAAgB,CAACa,KAAK,CAAC;EACzB,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBC,aAAa,CAACtB,aAAa,CAAC;IAC5B,MAAMuB,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC5B,QAAQ,CAAC,CAAC6B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;IAC1D,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,OAAO,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;MACvC,IAAIE,KAAK,GAAGT,OAAO,CAACO,CAAC,CAAC;MACtB,OAAOA,CAAC,GAAGP,OAAO,CAACQ,MAAM,GAAG,CAAC,IAAIR,OAAO,CAACO,CAAC,GAAG,CAAC,CAAC,KAAKP,OAAO,CAACO,CAAC,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE;MACvE,IAAIG,GAAG,GAAGV,OAAO,CAACO,CAAC,CAAC,GAAG,CAAC;MACxBD,MAAM,CAACK,IAAI,CAAC,CAACF,KAAK,EAAEC,GAAG,CAAC,CAAC;IAC3B;IACA,MAAME,GAAG,GAAGC,cAAc,CAAC,CAAC,GAAGzC,OAAO,EAAE,GAAGkC,MAAM,CAAC,CAAC;IACnD,MAAMjB,YAAY,GAAGlB,QAAQ,CAACgB,OAAO,CAACC,WAAW;IACjDf,UAAU,CAACuC,GAAG,CAAC;IACfrC,WAAW,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;IACtBQ,YAAY,CAAC8B,OAAO,CAAC,cAAc,EAAEhC,IAAI,CAACiC,SAAS,CAAC;MAAE7B,SAAS,EAAE0B,GAAG;MAAEvB;IAAa,CAAC,CAAC,CAAC;IAEtF,MAAM2B,QAAQ,GAAGC,wBAAwB,CAACL,GAAG,CAAC;IAC9C,IAAII,QAAQ,KAAK,GAAG,IAAI,CAACrC,UAAU,EAAE;MACnCuC,KAAK,CAAC,gDAAgD,CAAC;MACvDtC,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,MAAMiC,cAAc,GAAI3B,SAAS,IAAK;IACpCA,SAAS,CAACiB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,MAAM,CAACG,KAAK,EAAEC,GAAG,CAAC,IAAIxB,SAAS,EAAE;MACpC,IAAI,CAACoB,MAAM,CAACE,MAAM,IAAIF,MAAM,CAACA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGC,KAAK,EAAE;QAC1DH,MAAM,CAACK,IAAI,CAAC,CAACF,KAAK,EAAEC,GAAG,CAAC,CAAC;MAC3B,CAAC,MAAM;QACLJ,MAAM,CAACA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGd,IAAI,CAACyB,GAAG,CAACb,MAAM,CAACA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEE,GAAG,CAAC;MAC5E;IACF;IACA,OAAOJ,MAAM;EACf,CAAC;EAED,MAAMW,wBAAwB,GAAI/B,SAAS,IAAK;IAC9C,MAAMkC,aAAa,GAAGlC,SAAS,CAACmC,MAAM,CAAC,CAACC,GAAG,EAAE,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAKF,GAAG,IAAIE,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,CAAC;IACzE,OAAO7B,IAAI,CAAC+B,GAAG,CAAC,CAAEL,aAAa,GAAGpD,cAAc,GAAI,GAAG,EAAE0D,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;EAC3E,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB3C,YAAY,CAAC4C,UAAU,CAAC,cAAc,CAAC;IACvCvD,UAAU,CAAC,EAAE,CAAC;IACdE,WAAW,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;IACtBI,aAAa,CAAC,KAAK,CAAC;IACpBT,QAAQ,CAACgB,OAAO,CAACC,WAAW,GAAG,CAAC;EAClC,CAAC;EAED,MAAMyC,WAAW,GAAGA,CAAA,KAAMZ,wBAAwB,CAAC7C,OAAO,CAAC;EAE3D,oBACEL,OAAA;IAAK+D,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BhE,OAAA;MAAQ+D,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACxBhE,OAAA;QAAAgE,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAETpE,OAAA;MAAM+D,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC5BhE,OAAA;QAAK+D,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BhE,OAAA;UACEqE,GAAG,EAAEjE,QAAS;UACdkE,KAAK,EAAC,KAAK;UACXC,QAAQ;UACRC,MAAM,EAAEjD,aAAc;UACtBkD,OAAO,EAAE1C,YAAa;UACtB2C,OAAO,EAAE3C,YAAa;UACtB4C,GAAG,EAAC,oBAAoB,CAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACTpE,OAAA;UAAK+D,SAAS,EAAC,kBAAkB;UAAAC,QAAA,GAAC,YAAU,EAACF,WAAW,CAAC,CAAC,EAAC,GAAC;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClEpE,OAAA;UAAQ+D,SAAS,EAAC,cAAc;UAACa,OAAO,EAAEhB,WAAY;UAAAI,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAEPpE,OAAA;MAAQ+D,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACxBhE,OAAA;QAAAgE,QAAA,EAAG;MAA6C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjE,EAAA,CArGQD,GAAG;AAAA2E,EAAA,GAAH3E,GAAG;AAuGZ,eAAeA,GAAG;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}