{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkumar/Desktop/shubhdev/assignment/video/src/App.js\",\n  _s = $RefreshSig$();\n// Frontend-only Video Progress Tracker (React + Local State)\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef();\n  const [watched, setWatched] = useState([]);\n  const [watching, setWatching] = useState(new Set());\n  const [intervalTimer, setIntervalTimer] = useState(null);\n  const [alertShown, setAlertShown] = useState(false);\n  const [videoDuration, setVideoDuration] = useState(0);\n  useEffect(() => {\n    const stored = JSON.parse(localStorage.getItem(\"progressData\"));\n    if (stored) {\n      setWatched(stored.intervals || []);\n      if (videoRef.current) videoRef.current.currentTime = stored.lastPosition || 0;\n    }\n  }, []);\n  const handleLoadedMetadata = () => {\n    const duration = Math.floor(videoRef.current.duration);\n    setVideoDuration(duration);\n  };\n  const startTracking = () => {\n    const timer = setInterval(() => {\n      const time = Math.floor(videoRef.current.currentTime);\n      setWatching(prev => new Set(prev).add(time));\n    }, 500);\n    setIntervalTimer(timer);\n  };\n  const stopTracking = () => {\n    clearInterval(intervalTimer);\n    const seconds = Array.from(watching).sort((a, b) => a - b);\n    const merged = [];\n    for (let i = 0; i < seconds.length; i++) {\n      let start = seconds[i];\n      while (i < seconds.length - 1 && seconds[i + 1] === seconds[i] + 1) i++;\n      let end = seconds[i] + 1;\n      merged.push([start, end]);\n    }\n    const all = mergeIntervals([...watched, ...merged]);\n    const lastPosition = videoRef.current.currentTime;\n    setWatched(all);\n    setWatching(new Set());\n    localStorage.setItem(\"progressData\", JSON.stringify({\n      intervals: all,\n      lastPosition\n    }));\n    const progress = getProgressFromIntervals(all);\n    if (progress === 100 && !alertShown) {\n      alert(\" You've watched 100% of the video.\");\n      setAlertShown(true);\n    }\n  };\n  const mergeIntervals = intervals => {\n    intervals.sort((a, b) => a[0] - b[0]);\n    const merged = [];\n    for (const [start, end] of intervals) {\n      if (!merged.length || merged[merged.length - 1][1] < start) {\n        merged.push([start, end]);\n      } else {\n        merged[merged.length - 1][1] = Math.max(merged[merged.length - 1][1], end);\n      }\n    }\n    return merged;\n  };\n  const getProgressFromIntervals = intervals => {\n    if (videoDuration === 0) return 0;\n    const uniqueSeconds = intervals.reduce((acc, [s, e]) => acc + (e - s), 0);\n    return Math.min((uniqueSeconds / videoDuration * 100).toFixed(2), 100);\n  };\n  const handleReset = () => {\n    localStorage.removeItem(\"progressData\");\n    setWatched([]);\n    setWatching(new Set());\n    setAlertShown(false);\n    if (videoRef.current) videoRef.current.currentTime = 0;\n  };\n  const getProgress = () => getProgressFromIntervals(watched);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Track Video progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          width: \"600\",\n          controls: true,\n          onPlay: startTracking,\n          onPause: stopTracking,\n          onEnded: stopTracking,\n          onLoadedMetadata: handleLoadedMetadata,\n          src: \"/videos/sample.mp4\" // Replace with your local video file\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-display\",\n          children: [\"Progress: \", getProgress(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          style: {\n            backgroundColor: \"yellow\",\n            color: \"blueviolet\",\n            margin: \"5px\"\n          },\n          onClick: handleReset,\n          children: \"Reset Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 Track Video progress  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Pj1lb+QNEhoRR16aMls4oyKOyOI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","App","_s","videoRef","watched","setWatched","watching","setWatching","Set","intervalTimer","setIntervalTimer","alertShown","setAlertShown","videoDuration","setVideoDuration","stored","JSON","parse","localStorage","getItem","intervals","current","currentTime","lastPosition","handleLoadedMetadata","duration","Math","floor","startTracking","timer","setInterval","time","prev","add","stopTracking","clearInterval","seconds","Array","from","sort","a","b","merged","i","length","start","end","push","all","mergeIntervals","setItem","stringify","progress","getProgressFromIntervals","alert","max","uniqueSeconds","reduce","acc","s","e","min","toFixed","handleReset","removeItem","getProgress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","controls","onPlay","onPause","onEnded","onLoadedMetadata","src","style","backgroundColor","color","margin","onClick","_c","$RefreshReg$"],"sources":["/Users/shubhamkumar/Desktop/shubhdev/assignment/video/src/App.js"],"sourcesContent":["// Frontend-only Video Progress Tracker (React + Local State)\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const videoRef = useRef();\n  const [watched, setWatched] = useState([]);\n  const [watching, setWatching] = useState(new Set());\n  const [intervalTimer, setIntervalTimer] = useState(null);\n  const [alertShown, setAlertShown] = useState(false);\n  const [videoDuration, setVideoDuration] = useState(0);\n\n  useEffect(() => {\n    const stored = JSON.parse(localStorage.getItem(\"progressData\"));\n    if (stored) {\n      setWatched(stored.intervals || []);\n      if (videoRef.current)\n        videoRef.current.currentTime = stored.lastPosition || 0;\n    }\n  }, []);\n\n  const handleLoadedMetadata = () => {\n    const duration = Math.floor(videoRef.current.duration);\n    setVideoDuration(duration);\n  };\n\n  const startTracking = () => {\n    const timer = setInterval(() => {\n      const time = Math.floor(videoRef.current.currentTime);\n      setWatching((prev) => new Set(prev).add(time));\n    }, 500);\n    setIntervalTimer(timer);\n  };\n\n  const stopTracking = () => {\n    clearInterval(intervalTimer);\n    const seconds = Array.from(watching).sort((a, b) => a - b);\n    const merged = [];\n    for (let i = 0; i < seconds.length; i++) {\n      let start = seconds[i];\n      while (i < seconds.length - 1 && seconds[i + 1] === seconds[i] + 1) i++;\n      let end = seconds[i] + 1;\n      merged.push([start, end]);\n    }\n    const all = mergeIntervals([...watched, ...merged]);\n    const lastPosition = videoRef.current.currentTime;\n    setWatched(all);\n    setWatching(new Set());\n    localStorage.setItem(\n      \"progressData\",\n      JSON.stringify({ intervals: all, lastPosition })\n    );\n\n    const progress = getProgressFromIntervals(all);\n    if (progress === 100 && !alertShown) {\n      alert(\" You've watched 100% of the video.\");\n      setAlertShown(true);\n    }\n  };\n\n  const mergeIntervals = (intervals) => {\n    intervals.sort((a, b) => a[0] - b[0]);\n    const merged = [];\n    for (const [start, end] of intervals) {\n      if (!merged.length || merged[merged.length - 1][1] < start) {\n        merged.push([start, end]);\n      } else {\n        merged[merged.length - 1][1] = Math.max(\n          merged[merged.length - 1][1],\n          end\n        );\n      }\n    }\n    return merged;\n  };\n\n  const getProgressFromIntervals = (intervals) => {\n    if (videoDuration === 0) return 0;\n    const uniqueSeconds = intervals.reduce((acc, [s, e]) => acc + (e - s), 0);\n    return Math.min(((uniqueSeconds / videoDuration) * 100).toFixed(2), 100);\n  };\n\n  const handleReset = () => {\n    localStorage.removeItem(\"progressData\");\n    setWatched([]);\n    setWatching(new Set());\n    setAlertShown(false);\n    if (videoRef.current) videoRef.current.currentTime = 0;\n  };\n\n  const getProgress = () => getProgressFromIntervals(watched);\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"navbar\">\n        <h2>Track Video progress</h2>\n      </header>\n\n      <main className=\"main-content\">\n        <div className=\"video-container\">\n          <video\n            ref={videoRef}\n            width=\"600\"\n            controls\n            onPlay={startTracking}\n            onPause={stopTracking}\n            onEnded={stopTracking}\n            onLoadedMetadata={handleLoadedMetadata}\n            src=\"/videos/sample.mp4\" // Replace with your local video file\n          ></video>\n          <div className=\"progress-display\">Progress: {getProgress()}%</div>\n          <button className=\"reset-button\" style={{backgroundColor:\"yellow\" , color:\"blueviolet\", margin:\"5px\"}} onClick={handleReset}>\n            Reset Progress\n          </button>\n        </div>\n      </main>\n\n      <footer className=\"footer\">\n        <p>&copy; Track Video progress  </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}