{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkumar/Desktop/shubhdev/assignment/video/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Component/Header\";\nimport Footer from \"./Component/Footer\";\nimport Home from \"./Component/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef();\n  const [watched, setWatched] = useState([]);\n  const [watching, setWatching] = useState(new Set());\n  const [intervalTimer, setIntervalTimer] = useState(null);\n  const [alertShown, setAlertShown] = useState(false);\n  const [videoDuration, setVideoDuration] = useState(0);\n  const [videoSrc, setVideoSrc] = useState(null);\n  const [videoKey, setVideoKey] = useState(null);\n  useEffect(() => {\n    if (!videoKey) return;\n    const stored = JSON.parse(localStorage.getItem(videoKey));\n    if (stored) {\n      setWatched(stored.intervals || []);\n      if (videoRef.current) videoRef.current.currentTime = stored.lastPosition || 0;\n    } else {\n      setWatched([]);\n      if (videoRef.current) videoRef.current.currentTime = 0;\n    }\n  }, [videoKey]);\n  const handleLoadedMetadata = () => {\n    const duration = Math.floor(videoRef.current.duration);\n    setVideoDuration(duration);\n  };\n  const startTracking = () => {\n    const timer = setInterval(() => {\n      const time = Math.floor(videoRef.current.currentTime);\n      setWatching(prev => new Set(prev).add(time));\n    }, 500);\n    setIntervalTimer(timer);\n  };\n  const stopTracking = () => {\n    clearInterval(intervalTimer);\n    const seconds = Array.from(watching).sort((a, b) => a - b);\n    const merged = [];\n    for (let i = 0; i < seconds.length; i++) {\n      let start = seconds[i];\n      while (i < seconds.length - 1 && seconds[i + 1] === seconds[i] + 1) i++;\n      let end = seconds[i] + 1;\n      merged.push([start, end]);\n    }\n    const all = mergeIntervals([...watched, ...merged]);\n    const lastPosition = videoRef.current.currentTime;\n    setWatched(all);\n    setWatching(new Set());\n    localStorage.setItem(videoKey, JSON.stringify({\n      intervals: all,\n      lastPosition\n    }));\n    const progress = getProgressFromIntervals(all);\n    if (progress === 100 && !alertShown) {\n      alert(\"ðŸŽ‰ Congrats! You've watched 100% of the video.\");\n      setAlertShown(true);\n    }\n  };\n  const mergeIntervals = intervals => {\n    intervals.sort((a, b) => a[0] - b[0]);\n    const merged = [];\n    for (const [start, end] of intervals) {\n      if (!merged.length || merged[merged.length - 1][1] < start) {\n        merged.push([start, end]);\n      } else {\n        merged[merged.length - 1][1] = Math.max(merged[merged.length - 1][1], end);\n      }\n    }\n    return merged;\n  };\n  const getProgressFromIntervals = intervals => {\n    if (videoDuration === 0) return 0;\n    const uniqueSeconds = intervals.reduce((acc, [s, e]) => acc + (e - s), 0);\n    return Math.min((uniqueSeconds / videoDuration * 100).toFixed(2), 100);\n  };\n  const handleReset = () => {\n    if (!videoKey) return;\n    localStorage.removeItem(videoKey);\n    setWatched([]);\n    setWatching(new Set());\n    setAlertShown(false);\n    if (videoRef.current) videoRef.current.currentTime = 0;\n  };\n  const getProgress = () => getProgressFromIntervals(watched);\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const videoURL = URL.createObjectURL(file);\n    const key = `video-progress-${file.name}`;\n    setVideoSrc(videoURL);\n    setVideoKey(key);\n    setAlertShown(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AjKUaSDuLU3SfRCCZNS4AEpnHnQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","Footer","Home","jsxDEV","_jsxDEV","App","_s","videoRef","useRef","watched","setWatched","useState","watching","setWatching","Set","intervalTimer","setIntervalTimer","alertShown","setAlertShown","videoDuration","setVideoDuration","videoSrc","setVideoSrc","videoKey","setVideoKey","useEffect","stored","JSON","parse","localStorage","getItem","intervals","current","currentTime","lastPosition","handleLoadedMetadata","duration","Math","floor","startTracking","timer","setInterval","time","prev","add","stopTracking","clearInterval","seconds","Array","from","sort","a","b","merged","i","length","start","end","push","all","mergeIntervals","setItem","stringify","progress","getProgressFromIntervals","alert","max","uniqueSeconds","reduce","acc","s","e","min","toFixed","handleReset","removeItem","getProgress","handleFileUpload","file","target","files","videoURL","URL","createObjectURL","key","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shubhamkumar/Desktop/shubhdev/assignment/video/src/App.js"],"sourcesContent":["\nimport React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Component/Header\";\nimport Footer from \"./Component/Footer\";\nimport Home from \"./Component/Home\";\n\nfunction App() {\n  const videoRef = useRef();\n  const [watched, setWatched] = useState([]);\n  const [watching, setWatching] = useState(new Set());\n  const [intervalTimer, setIntervalTimer] = useState(null);\n  const [alertShown, setAlertShown] = useState(false);\n  const [videoDuration, setVideoDuration] = useState(0);\n  const [videoSrc, setVideoSrc] = useState(null);\n  const [videoKey, setVideoKey] = useState(null);\n\n  useEffect(() => {\n    if (!videoKey) return;\n    const stored = JSON.parse(localStorage.getItem(videoKey));\n    if (stored) {\n      setWatched(stored.intervals || []);\n      if (videoRef.current)\n        videoRef.current.currentTime = stored.lastPosition || 0;\n    } else {\n      setWatched([]);\n      if (videoRef.current) videoRef.current.currentTime = 0;\n    }\n  }, [videoKey]);\n\n  const handleLoadedMetadata = () => {\n    const duration = Math.floor(videoRef.current.duration);\n    setVideoDuration(duration);\n  };\n\n  const startTracking = () => {\n    const timer = setInterval(() => {\n      const time = Math.floor(videoRef.current.currentTime);\n      setWatching((prev) => new Set(prev).add(time));\n    }, 500);\n    setIntervalTimer(timer);\n  };\n\n  const stopTracking = () => {\n    clearInterval(intervalTimer);\n    const seconds = Array.from(watching).sort((a, b) => a - b);\n    const merged = [];\n    for (let i = 0; i < seconds.length; i++) {\n      let start = seconds[i];\n      while (i < seconds.length - 1 && seconds[i + 1] === seconds[i] + 1) i++;\n      let end = seconds[i] + 1;\n      merged.push([start, end]);\n    }\n    const all = mergeIntervals([...watched, ...merged]);\n    const lastPosition = videoRef.current.currentTime;\n    setWatched(all);\n    setWatching(new Set());\n    localStorage.setItem(\n      videoKey,\n      JSON.stringify({ intervals: all, lastPosition })\n    );\n\n    const progress = getProgressFromIntervals(all);\n    if (progress === 100 && !alertShown) {\n      alert(\"ðŸŽ‰ Congrats! You've watched 100% of the video.\");\n      setAlertShown(true);\n    }\n  };\n\n  const mergeIntervals = (intervals) => {\n    intervals.sort((a, b) => a[0] - b[0]);\n    const merged = [];\n    for (const [start, end] of intervals) {\n      if (!merged.length || merged[merged.length - 1][1] < start) {\n        merged.push([start, end]);\n      } else {\n        merged[merged.length - 1][1] = Math.max(\n          merged[merged.length - 1][1],\n          end\n        );\n      }\n    }\n    return merged;\n  };\n\n  const getProgressFromIntervals = (intervals) => {\n    if (videoDuration === 0) return 0;\n    const uniqueSeconds = intervals.reduce((acc, [s, e]) => acc + (e - s), 0);\n    return Math.min(((uniqueSeconds / videoDuration) * 100).toFixed(2), 100);\n  };\n\n  const handleReset = () => {\n    if (!videoKey) return;\n    localStorage.removeItem(videoKey);\n    setWatched([]);\n    setWatching(new Set());\n    setAlertShown(false);\n    if (videoRef.current) videoRef.current.currentTime = 0;\n  };\n\n  const getProgress = () => getProgressFromIntervals(watched);\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const videoURL = URL.createObjectURL(file);\n    const key = `video-progress-${file.name}`;\n    setVideoSrc(videoURL);\n    setVideoKey(key);\n    setAlertShown(false);\n  };\n\n  return (\n    <div className=\"app-container\">\n\n<Header></Header>\n\n<Home></Home>\n\n<Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}