{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkumar/Desktop/shubhdev/assignment/video/src/Component/Home.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const videoRef = useRef();\n  const [watched, setWatched] = useState([]);\n  const [watching, setWatching] = useState(new Set());\n  const [intervalTimer, setIntervalTimer] = useState(null);\n  const [alertShown, setAlertShown] = useState(false);\n  const [videoDuration, setVideoDuration] = useState(0);\n  const [videoSrc, setVideoSrc] = useState(null);\n  const [videoKey, setVideoKey] = useState(null);\n  useEffect(() => {\n    if (!videoKey) return;\n    const stored = JSON.parse(localStorage.getItem(videoKey));\n    if (stored) {\n      setWatched(stored.intervals || []);\n      if (videoRef.current) videoRef.current.currentTime = stored.lastPosition || 0;\n    } else {\n      setWatched([]);\n      if (videoRef.current) videoRef.current.currentTime = 0;\n    }\n  }, [videoKey]);\n  const handleLoadedMetadata = () => {\n    const duration = Math.floor(videoRef.current.duration);\n    setVideoDuration(duration);\n  };\n  const startTracking = () => {\n    const timer = setInterval(() => {\n      const time = Math.floor(videoRef.current.currentTime);\n      setWatching(prev => new Set(prev).add(time));\n    }, 500);\n    setIntervalTimer(timer);\n  };\n  const stopTracking = () => {\n    clearInterval(intervalTimer);\n    const seconds = Array.from(watching).sort((a, b) => a - b);\n    const merged = [];\n    for (let i = 0; i < seconds.length; i++) {\n      let start = seconds[i];\n      while (i < seconds.length - 1 && seconds[i + 1] === seconds[i] + 1) i++;\n      let end = seconds[i] + 1;\n      merged.push([start, end]);\n    }\n    const all = mergeIntervals([...watched, ...merged]);\n    const lastPosition = videoRef.current.currentTime;\n    setWatched(all);\n    setWatching(new Set());\n    localStorage.setItem(videoKey, JSON.stringify({\n      intervals: all,\n      lastPosition\n    }));\n    const progress = getProgressFromIntervals(all);\n    if (progress === 100 && !alertShown) {\n      alert(\" this video.\");\n      setAlertShown(true);\n    }\n  };\n  const mergeIntervals = intervals => {\n    intervals.sort((a, b) => a[0] - b[0]);\n    const merged = [];\n    for (const [start, end] of intervals) {\n      if (!merged.length || merged[merged.length - 1][1] < start) {\n        merged.push([start, end]);\n      } else {\n        merged[merged.length - 1][1] = Math.max(merged[merged.length - 1][1], end);\n      }\n    }\n    return merged;\n  };\n  const getProgressFromIntervals = intervals => {\n    if (videoDuration === 0) return 0;\n    const uniqueSeconds = intervals.reduce((acc, [s, e]) => acc + (e - s), 0);\n    return Math.min((uniqueSeconds / videoDuration * 100).toFixed(2), 100);\n  };\n  const handleReset = () => {\n    if (!videoKey) return;\n    localStorage.removeItem(videoKey);\n    setWatched([]);\n    setWatching(new Set());\n    setAlertShown(false);\n    if (videoRef.current) videoRef.current.currentTime = 0;\n  };\n  const getProgress = () => getProgressFromIntervals(watched);\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const videoURL = URL.createObjectURL(file);\n    const key = `video-progress-${file.name}`;\n    setVideoSrc(videoURL);\n    setVideoKey(key);\n    setAlertShown(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [!videoSrc && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"video/*\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 3\n        }, this), videoSrc && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            width: \"600\",\n            controls: true,\n            onPlay: startTracking,\n            onPause: stopTracking,\n            onEnded: stopTracking,\n            onLoadedMetadata: handleLoadedMetadata,\n            src: videoSrc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reset-button\",\n              onClick: handleReset,\n              children: \"Reset Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-display\",\n              children: [\"Progress: \", getProgress(), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"AjKUaSDuLU3SfRCCZNS4AEpnHnQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","videoRef","watched","setWatched","watching","setWatching","Set","intervalTimer","setIntervalTimer","alertShown","setAlertShown","videoDuration","setVideoDuration","videoSrc","setVideoSrc","videoKey","setVideoKey","stored","JSON","parse","localStorage","getItem","intervals","current","currentTime","lastPosition","handleLoadedMetadata","duration","Math","floor","startTracking","timer","setInterval","time","prev","add","stopTracking","clearInterval","seconds","Array","from","sort","a","b","merged","i","length","start","end","push","all","mergeIntervals","setItem","stringify","progress","getProgressFromIntervals","alert","max","uniqueSeconds","reduce","acc","s","e","min","toFixed","handleReset","removeItem","getProgress","handleFileUpload","file","target","files","videoURL","URL","createObjectURL","key","name","children","className","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","controls","onPlay","onPause","onEnded","onLoadedMetadata","src","onClick","_c","$RefreshReg$"],"sources":["/Users/shubhamkumar/Desktop/shubhdev/assignment/video/src/Component/Home.jsx"],"sourcesContent":["import React from 'react'\nimport  { useEffect, useRef, useState } from \"react\";\nconst Home = () => {\n\n\n\n    const videoRef = useRef();\n    const [watched, setWatched] = useState([]);\n    const [watching, setWatching] = useState(new Set());\n    const [intervalTimer, setIntervalTimer] = useState(null);\n    const [alertShown, setAlertShown] = useState(false);\n    const [videoDuration, setVideoDuration] = useState(0);\n    const [videoSrc, setVideoSrc] = useState(null);\n    const [videoKey, setVideoKey] = useState(null);\n  \n    useEffect(() => {\n      if (!videoKey) return;\n      const stored = JSON.parse(localStorage.getItem(videoKey));\n      if (stored) {\n        setWatched(stored.intervals || []);\n        if (videoRef.current)\n          videoRef.current.currentTime = stored.lastPosition || 0;\n      } else {\n        setWatched([]);\n        if (videoRef.current) videoRef.current.currentTime = 0;\n      }\n    }, [videoKey]);\n  \n    const handleLoadedMetadata = () => {\n      const duration = Math.floor(videoRef.current.duration);\n      setVideoDuration(duration);\n    };\n  \n    const startTracking = () => {\n      const timer = setInterval(() => {\n        const time = Math.floor(videoRef.current.currentTime);\n        setWatching((prev) => new Set(prev).add(time));\n      }, 500);\n      setIntervalTimer(timer);\n    };\n  \n    const stopTracking = () => {\n      clearInterval(intervalTimer);\n      const seconds = Array.from(watching).sort((a, b) => a - b);\n      const merged = [];\n      for (let i = 0; i < seconds.length; i++) {\n        let start = seconds[i];\n        while (i < seconds.length - 1 && seconds[i + 1] === seconds[i] + 1) i++;\n        let end = seconds[i] + 1;\n        merged.push([start, end]);\n      }\n      const all = mergeIntervals([...watched, ...merged]);\n      const lastPosition = videoRef.current.currentTime;\n      setWatched(all);\n      setWatching(new Set());\n      localStorage.setItem(\n        videoKey,\n        JSON.stringify({ intervals: all, lastPosition })\n      );\n  \n      const progress = getProgressFromIntervals(all);\n      if (progress === 100 && !alertShown) {\n        alert(\" this video.\");\n        setAlertShown(true);\n      }\n    };\n  \n    const mergeIntervals = (intervals) => {\n      intervals.sort((a, b) => a[0] - b[0]);\n      const merged = [];\n      for (const [start, end] of intervals) {\n        if (!merged.length || merged[merged.length - 1][1] < start) {\n          merged.push([start, end]);\n        } else {\n          merged[merged.length - 1][1] = Math.max(\n            merged[merged.length - 1][1],\n            end\n          );\n        }\n      }\n      return merged;\n    };\n  \n    const getProgressFromIntervals = (intervals) => {\n      if (videoDuration === 0) return 0;\n      const uniqueSeconds = intervals.reduce((acc, [s, e]) => acc + (e - s), 0);\n      return Math.min(((uniqueSeconds / videoDuration) * 100).toFixed(2), 100);\n    };\n  \n    const handleReset = () => {\n      if (!videoKey) return;\n      localStorage.removeItem(videoKey);\n      setWatched([]);\n      setWatching(new Set());\n      setAlertShown(false);\n      if (videoRef.current) videoRef.current.currentTime = 0;\n    };\n  \n    const getProgress = () => getProgressFromIntervals(watched);\n  \n    const handleFileUpload = (e) => {\n      const file = e.target.files[0];\n      if (!file) return;\n      const videoURL = URL.createObjectURL(file);\n      const key = `video-progress-${file.name}`;\n      setVideoSrc(videoURL);\n      setVideoKey(key);\n      setAlertShown(false);\n    };\n  \n\n\n  return (\n    <div>\n     <main className=\"main-content\">\n        <div className=\"video-container\">\n        {!videoSrc && (\n  <input type=\"file\" accept=\"video/*\" onChange={handleFileUpload} />\n)}\n\n          {videoSrc && (\n            <>\n              <video\n                ref={videoRef}\n                width=\"600\"\n                controls\n                onPlay={startTracking}\n                onPause={stopTracking}\n                onEnded={stopTracking}\n                onLoadedMetadata={handleLoadedMetadata}\n                src={videoSrc}\n              ></video>\n              <div className=\"progress-row\">\n\n                <button className=\"reset-button\" onClick={handleReset}>\n                  Reset Progress\n                </button>\n\n                <div className=\"progress-display\">\n                  Progress: {getProgress()}%\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default Home\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}